class Foo {
  var attr

  def __str() {
    "Foo instance"
  }
}

class Bar(Foo) {
}

var foo = Foo()
assert(foo.__str() == "Foo instance")
foo.attr = 5
assert(foo.attr == 5)

var bar = Bar()
assert(bar.__str() == "Foo instance")
bar.attr = 15
assert(bar.attr == 15)

# Test methods on Class (e.g. Class.extends, Class.of)

assert(Class.extends(Class))
assert(Class.extends(Object))
assert(not Object.extends(Class))
assert(Number.extends(Object))
assert(not Number.extends(Class))
assert(not Class.extends(Number))

assert(Class.of(Class) is Class)
assert(Class.of(Number) is Class)
assert(Class.of("hello") is String)
assert(Class.of(List) is ListClass)

# Test mro

print(List.mro)
assert(List.mro == L(List, Object))
assert(String.mro == L(String, Object))

class A {}
class B {}
class C(A, B) {}

assert(C.mro == L(C, A, B, Object))
